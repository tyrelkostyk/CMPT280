package lib280.tree;

import lib280.base.LinearIterator280;
import lib280.exception.AfterTheEnd280Exception;
import lib280.exception.ContainerEmpty280Exception;
import lib280.exception.NoCurrentItem280Exception;

public class ArrayedBinaryTreeIterator280<I> extends ArrayedBinaryTreePosition280 implements LinearIterator280<I> {

	// This is a reference to the tree that created this iterator object.
	ArrayedBinaryTree280<I> tree;
	
	// An integer that represents the cursor position is inherited from
	// ArrayedBinaryTreePosition280.
	
	/**
	 * Create a new iterator from a given heap.
	 * @param t The heap for which to create a new iterator.
	 */
	public ArrayedBinaryTreeIterator280(ArrayedBinaryTree280<I> t) {
		super(t.currentNode);
		this.tree = t;
	}

	// TODO - Complete the following methods which are required by LinearIterator280<I>
	// Note that these method stubs were automatically generated by IntelliJ and every one of them
	// requires your attention.

	@Override
	public boolean before() {
		return false;
	}

	@Override
	public boolean after() {
		return false;
	}

	@Override
	public void goForth() throws AfterTheEnd280Exception {

	}

	@Override
	public void goFirst() throws ContainerEmpty280Exception {

	}

	@Override
	public void goBefore() {

	}

	@Override
	public void goAfter() {

	}

	@Override
	public I item() throws NoCurrentItem280Exception {
		return null;
	}

	@Override
	public boolean itemExists() {
		return false;
	}


}
